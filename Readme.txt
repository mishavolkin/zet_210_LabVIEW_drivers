			0. Содержание
	1. Установка
	2. Замечания.
	3. Глоссарий.



			1. Установка

Для работы необходимо:
• LabVIEV 7.1 или 7.1.1
• ZetLab

1) Установить ZetLab, убедиться что устройство работает.
2) Установить LabVIEW, если не был установлен ранее
3) Скопировать \Z210 в %Program Files%\National Instruments\LabVIEW 7.1\instr.lib\




			2. Замечания.

Если Вы уже купили устройство Zet 210, и надеетесь работать с ним в среде LabVIEW можете воспользоваться этим набором драйверов, поскольку опубликованный на сайте zetms.ru — не работает, не документирован и, вообще, имеет один фатальный недостаток :) На данный момент можно измерять и задавать квазипостоянное напряжение на входах раз в ~10 мс. Если надо быстрее — несложно дописать SubVI, который будет генерировать/записывать нужный Вам сигнал с желаемой частотой дискретизации. Так же молчаливо предполагается, что одно пользовательское приложение работает с одним устройством, однако, насколько я понимаю, добавление второго и последующих устройств, скорее всего, не вызовет проблем.

Кстати, господа из ЗАО "ЭТМС", не очень то хорошо с вашей стороны "с удовольствием размещать у себя на сайте разработки ваших потребителей", забывая указать, что это не официальный продукт. Это вводит потенциальных покупателей в заблуждение. А-я-я-яй!

Именование функций и библиотек повторяет, по возможности, опубликованный на сайте "драйвер". Корректно реализована обработка ошибок. Убраны функции Zadc.dll не поддерживаемые устройством Zet 210. Все остальное имеет справку, появляющуюся в Context Help. Я отошел от терминологии, используемой в документации по динамической библиотеке Zadc.dll, поскольку она несколько запутывает (см. раздел Глоссарий). Так же, примеры лежат в отдельной директории "Z210 Tests & Examples" и снабжены краткими описаниями. Если у Вас возникнут вопросы, попробуйте мне написать на mikhail.shestakov@gmail.com Только, пожалуйста, примите во внимание что я — не служба поддержки ЗАО "ЭТМС".


Драйвера сгруппированы в несколько библиотек:
• Routines — собственно драйверы — набор функций, позволяющий совершать конкретные осмысленные действия над устройством с уверенностью, что все будет сделано так как надо (или вызовет ошибку). включение каналов пачкой, установка частоты (с возможностью автоматом получить min или max возможную), и т.д. Подразумевается, что это основные "кирпичики" для построения приложений.
• Base Functions — обертки (врапперы) для функций динамической библиотеки Zadc.dll, обеспечивающие правильный вызов, согласование типов (в т.ч. и физических единиц) и обработку кодов ошибок. Обертки повторяют функционал Zadc.dll за исключением Get List Freq, которая на самом деле возвращает список (а не подразумевает множественные вызовы себя, для его получения). Иконки стилизованы под Call Library Function Node, что символизирует :) Обычно, нет необходимости применять функции из Base Functions при разработке собственных приложений.
• CTL Lib — библиотека содержит определения часто использемых в функциях из Base Functions и Routines типов данных (Strict type def). Как и функции, каждый контрол имеет описание, выводящееся в окне Context Help.

Как читать название функции
Z210 ROUTINE ADB All Channels Turn Off
Z210 - все функции имеют такой префикс. Поскольку тестировать я могу только на устройстве Zet 210, а динамическая библиотека Zadc.dll — одна для всех устройств производителя, трудно сказать будет ли работать данная функция корректно работать с другими устройствами.
	 ROUTINE — область применения
			 ADB — A - применимо к АЦП.
				   D - применимо к ЦАП.
				   B - применимо к АЦП и ЦАП одновременно. 
				Если использовано несколько букв, значит можно выбрать из вариантов. Если доступен выбор, то по умолчанию используется B, затем A. Если букв нет, значит функция не имеет непосредственного отношения к АЦП или ЦАП (напр. Connect и Disconnect)
					Channels Turn Off — название функции

Контролы расшифровываются аналогично.




			3. Глоссарий.
Поскольку терминология, использумая в документации к Zadc.dll, несколько запутанная, я составил собственный глоссарий и придерживаюсь его в хелпах к SubVI.			
			
• Выводы АЦП/ЦАП (ADC/DAC Inputs) — контакты соответстующих микросхем. Base Functions включающие и отключающие каналы принимают на вход номер вывода, т.е. Канал определяются номером вывода. Программно нумерация выводов начинается с 0, а на контактной площадке с 1. Чтобы не путаться, условимся, что первый вывод АЦП обозначается ADC#0, вывод ЦАП №2 — DAC#1, и т.д.

• Канал АЦП/ЦАП (ADC/DAC Channels) — виртуальные/программные каналы. Каналы АЦП могут быть двух типов: синфазные, занимающие один вывод, и дифференциальные, занимающие два соседних вывода. Контролы "Z210 CTL ADC Inputs.ctl" и "Z210 CTL DAC Inputs.ctl" определяют структуры данных, сопоставляющие каналы с выводами, на которых они расположены. Контролы "Z210 CTL ADC Voltages.ctl" и "Z210 CTL DAC Voltages.ctl" определяют структуры данных, сопоставляющие каналы с текущими значениями поданых на них (генерируемых ими) напряжений.


Буфер АЦП/ЦАП — (Буффер данных в ОЗУ ПК) массив 16-битных знаковых целых чисел (для устройства Zet 210) в который происходит циклическая запись данных, получаемых с АЦП/откуда происходит циклическое считывание данных, по которым формируется сигнал ЦАП. Данные группируются по кадрам.

Кадр — порция данных, расположенная в буфере данных и содержащая одномоментные напряжения по всем каналам.

Внутренний буфер — буфер в устройстве, где накапливаются данные для последующей пакетной передачи по USB.

Пакет — порция данных, которая перекачивается за одно прерывание. Связанное понятие — буффер для перекачки данных за одно прерывание, он же буффер прерывания. Размер этого буффера задан жестко (т.к. Zet210 — USB контроллер, ZGetInterrupt чтобы узнать), и составляет ровно 2 пакета.

АЦП-процесс — собирательное понятие для непрерывно и параллельно идущих процессов: оцифровки сигнала, накопления оцифрованных данных во внутреннем буффере устройства Z210 и пакетной пересылки накопленных данных в буффер данных АЦП (расположенный в памяти ПК).
ЦАП-процесс — собирательное понятие для непрерывно и параллельно идущих процессов: пакетной пересылки подготовленных данных из буффера данных ЦАП (расположенного в памяти ЦП) во внутренний буффер устройства и генерации аналогового сигнала по этим данным.